(()=>{"use strict";const t=p5;var o=function(t){return Math.min.apply(Math,t)},i=function(t){return Math.max.apply(Math,t)},r=function(t){return{min:o(t),max:i(t)}},n=function(){function o(t){this.raw={data:t},this.sorted=[]}return o.prototype.sort=function(o,i){var n,e;this.raw.data instanceof t.Table?(n=this.raw.data.getColumn(o),e=this.raw.data.getColumn(i)):this.raw.data instanceof Object&&(n=this.raw.data[o],e=this.raw.data[i]);var a=function(t){var o=t.map((function(t,o){return{index:o,value:t}}));return o.sort((function(t,o){return t.value>o.value?1:t.value<o.value?-1:0})),o.map((function(t){return t.index}))}(n),s={x:a.map((function(t){return n[t]})),y:a.map((function(t){return e[t]}))},p={x:o,y:i,data:s,xRange:r(s.x),yRange:r(s.y)};return this.sorted.push(p),p},o.prototype.get=function(t,o){var i;return this.sorted.forEach((function(r){r.x===t&&r.y===o&&(i=r)})),i||(i=this.sort(t,o)),i},o}(),e={default:{fontColor:"black",axesColor:"black",gridColor:"white",backgroundColor:"gainsboro"}},a={default:["#0173B2","#DE8F05","#029E73","#D55E00","#CC78BC","#CA9161","#FBAFE4","#949494","#ECE133","#56B4E9"],deep:["#4C72B0","#DD8452","#55A868","#C44E52","#8172B3","#937860","#DA8BC3","#8C8C8C","#CCB974","#64B5CD"],muted:["#4878D0","#EE854A","#6ACC64","#D65F5F","#956CB4","#8C613C","#DC7EC0","#797979","#D5BB67","#82C6E2"],pastel:["#A1C9F4","#FFB482","#8DE5A1","#FF9F9B","#D0BBFF","#DEBB9B","#FAB0E4","#CFCFCF","#FFFEA3","#B9F2F0"],bright:["#023EFF","#FF7C00","#1AC938","#E8000B","#8B2BE2","#9F4800","#F14CC1","#A3A3A3","#FFC400","#00D7FF"],dark:["#001C7F","#B1400D","#12711C","#8C0800","#591E71","#592F0D","#A23582","#3C3C3C","#B8850A","#006374"],colorblind:["#0173B2","#DE8F05","#029E73","#D55E00","#CC78BC","#CA9161","#FBAFE4","#949494","#ECE133","#56B4E9"]},s=50,p=function(t){var o=t.width,i=t.majorTicks*(t.minorTicks+1);return{numXTicks:i,dx:o/(i+2)}},h=function(t){var o=t.height,i=t.majorTicks*(t.minorTicks+1);return{numYTicks:i,dy:o/(i+2)}};const c=function(t){var o=t.pg,i=t.dataset,r=t.x,n=t.y,e=t.size,a=t.originX,s=t.originY,c=t.width,l=t.height,u=t.majorTicks,g=t.minorTicks,f=t.layersPalette;o.push(),o.translate(a,s);var d=p({width:c,majorTicks:u,minorTicks:g}).dx,C=h({height:l,majorTicks:u,minorTicks:g}).dy;o.translate(d,-C),o.noStroke(),o.fill(f[0]);for(var k=i.get(r,n),m=k.data,y=k.xRange,v=k.yRange,x=0;x<m.x.length;x+=1){var T=o.map(m.x[x],y.min,y.max,0,c-2*d),F=-o.map(m.y[x],v.min,v.max,0,l-2*C);o.circle(T,F,e)}o.pop()};var l=t.prototype,u=l.CENTER,g=l.ITALIC,f=l.PI,d=function(){return d=Object.assign||function(t){for(var o,i=1,r=arguments.length;i<r;i++)for(var n in o=arguments[i])Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n]);return t},d.apply(this,arguments)},C=function(){function o(t,o){this.pInst=t,this.props=function(t,o){return{pg:t.createGraphics(t.width,t.height),dataset:new n(o),plotX:0,plotY:0,size:5,padding:{top:s,right:s,bottom:s,left:s},originX:s,originY:t.height-s,width:t.width-100,height:t.height-100,majorTicks:5,minorTicks:4,tickSize:4,layersPalette:a.default,annotaionsPalette:e.default}}(t,o),this.layers=[],this.wrangle()}return o.prototype.wrangle=function(){var o;this.props.dataset.raw.data instanceof t.Table&&(o=this.props.dataset.raw.data).columns.forEach((function(t){try{!function(t,o){t.rows.forEach((function(t){var i=t.getNum(o);t.setNum(o,i)}))}(o,t)}catch(t){}}))},o.prototype.annotations=function(){this.background(),this.title(),this.xlabel(),this.ylabel(),this.gridLines(),this.axes()},o.prototype.render=function(){this.annotations(),this.layers.forEach((function(t){return t.operation(t.props)}))},o.prototype.clear=function(){this.layers=[]},o.prototype.title=function(t){this.props.title=t||this.props.title,function(t){var o=t.pg,i=t.padding,r=t.title,n=t.annotaionsPalette;o.push(),o.fill(n.fontColor),o.noStroke(),o.translate(i.left,i.top-o.textSize()),o.text(r,0,0),o.pop()}(this.props)},o.prototype.xlabel=function(t){var o,i,r,n,e,a,s;this.props.xLabel=t||this.props.xLabel,i=(o=this.props).pg,r=o.originX,n=o.originY,e=o.width,a=o.xLabel,s=o.annotaionsPalette,i.push(),i.fill(s.fontColor),i.noStroke(),i.translate(r+e/2,n+2.5*i.textSize()),i.textAlign(u,u),i.textStyle(g),i.text(a,0,0),i.pop()},o.prototype.ylabel=function(t){var o,i,r,n,e,a,s;this.props.yLabel=t||this.props.yLabel,i=(o=this.props).pg,r=o.originX,n=o.originY,e=o.height,a=o.yLabel,s=o.annotaionsPalette,i.push(),i.fill(s.fontColor),i.noStroke(),i.translate(r-2.5*i.textSize(),n-e/2),i.rotate(1.5*f),i.textAlign(u,u),i.textStyle(g),i.text(a,0,0),i.pop()},o.prototype.gridLines=function(t){this.props=d(d({},this.props),t),function(t){!function(t){var o=t.pg,i=t.originX,r=t.originY,n=t.width,e=t.height,a=t.majorTicks,s=t.minorTicks,h=t.annotaionsPalette;o.push(),o.stroke(h.gridColor),o.strokeWeight(1),o.translate(i,r);for(var c=p({width:n,majorTicks:a,minorTicks:s}),l=c.numXTicks,u=c.dx,g=0;g<=l;g+=1){var f=u*(g+1);g%(s+1)==0&&o.line(f,-1,f,-e)}o.pop()}(t),function(t){var o=t.pg,i=t.originX,r=t.originY,n=t.width,e=t.height,a=t.majorTicks,s=t.minorTicks,p=t.annotaionsPalette;o.push(),o.stroke(p.gridColor),o.strokeWeight(1),o.translate(i,r);for(var c=h({height:e,majorTicks:a,minorTicks:s}),l=c.numYTicks,u=c.dy,g=0;g<=l;g+=1){var f=-u*(g+1);g%(s+1)==0&&o.line(1,f,n,f)}o.pop()}(t)}(this.props)},o.prototype.axes=function(t){this.props=d(d({},this.props),t),function(t){!function(t){var o=t.pg,i=t.originX,r=t.originY,n=t.width,e=t.majorTicks,a=t.minorTicks,s=t.tickSize,h=t.annotaionsPalette;o.push(),o.stroke(h.axesColor),o.strokeWeight(1),o.translate(i,r),o.line(0,0,n,0);for(var c=p({width:n,majorTicks:e,minorTicks:a}),l=c.numXTicks,u=c.dx,g=0;g<=l;g+=1){var f,d=u*(g+1);f=g%(a+1)==0?2*s:s,o.line(d,0,d,f)}o.pop()}(t),function(t){var o=t.pg,i=t.originX,r=t.originY,n=t.height,e=t.majorTicks,a=t.minorTicks,s=t.tickSize,p=t.annotaionsPalette;o.push(),o.stroke(p.axesColor),o.strokeWeight(1),o.translate(i,r),o.line(0,0,0,-n);for(var c=h({height:n,majorTicks:e,minorTicks:a}),l=c.numYTicks,u=c.dy,g=0;g<=l;g+=1){var f,d=-u*(g+1);f=g%(a+1)==0?2*s:s,o.line(-f,d,0,d)}o.pop()}(t)}(this.props)},o.prototype.background=function(t){var o,i,r;this.props.backgroundColor=t||this.props.backgroundColor,i=(o=this.props).pg,r=o.annotaionsPalette,i.background(r.backgroundColor)},o.prototype.point=function(t){this.props=d(d({},this.props),t),this.layers.push({props:this.props,operation:c})},o}();p5.prototype.registerMethod("init",(function(){this._plots=[]})),p5.prototype.createPlot=function(t){var o=new C(this,t);return this._plots.push(o),o},p5.prototype.registerMethod("post",(function(){var t=this;this._plots.forEach((function(o){var i=o.props,r=i.pg,n=i.plotX,e=i.plotY;o.render(),t.image(r,n,e,r.width,r.height),o.clear()}))})),p5.prototype.registerMethod("remove",(function(){this._plots.forEach((function(t){return t.props.pg.remove()})),this._plots=void 0}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,